name: .Net
on:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - synchronize
    - reopened
    - closed
    branches:
    - main
env:
  IS_RELEASE_CANDIDATE: >-
    ${{
      (
        github.event_name == 'pull_request' &&
        startsWith(github.event.pull_request.title, 'RELEASES:') &&
        contains(github.event.pull_request.labels.*.name, 'RELEASES')
      )
      ||
      (
        github.event_name == 'push' &&
        startsWith(github.event.head_commit.message, 'RELEASES:') &&
        github.ref_name == 'RELEASE'
      )
    }}
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v3
    - name: Setup .Net
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.201
        include-prerelease: false
    - name: Restore
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
  add_tag:
    if: >
      github.event.pull_request.merged && 
      startsWith(github.event.pull_request.title, 'RELEASES:') && 
      contains(github.event.pull_request.labels.*.name, 'RELEASES')
    runs-on: ubuntu-latest
    needs:
    - build
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Extract Version Number
      id: extract_version
      run:
        echo "::set-output name=version_number::$(grep -oP '(?<=<Version>)[^<]+' ADotNet/ADotNet.csproj)"
    - name: Print Version Number
      run: |
        echo "Version number is ${{ steps.extract_version.outputs.version_number }}"
        echo "Merged: ${{ github.event.pull_request.merged }}"
        echo "Base ref: ${{ github.event.pull_request.base.ref }}"
        echo "Title: ${{ github.event.pull_request.title }}"
        echo "Labels: ${{ toJson(github.event.pull_request.labels) }}"
    - name: Configure Git
      run: |
        git config user.name "Add Git Release Tag Action"
        git config user.email "github.action@noreply.github.com"
    - name: Authenticate with GitHub
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT_FOR_TAGGING }}
    - name: Add Git Tag - Release
      run: |
        git tag -a "release-${{ steps.extract_version.outputs.version_number }}" -m "Release ${{ steps.extract_version.outputs.version_number }}"
        git push origin --tags